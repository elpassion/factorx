[ '4', '5' ] '5 + 5;\n5;\n() => {\n  fn([\'5\', \'6\']);\n  fn([\'5\', \'6\']);\n};\n'
[ '4', '5' ] '5 + 5;\n5;\n() => {\n  fn([\'5\', \'6\']);\n  fn([\'5\', \'6\']);\n};\n'
[ '4', '5' ] '5 + 5;\n5;\n() => {\n  fn([\'5\', \'6\']);\n  fn([\'5\', \'6\']);\n};\n'
[ '4', '5' ] '5 + 5;\n5;\n() => {\n  fn([\'5\', \'6\']);\n  fn([\'5\', \'6\']);\n};\n'
eureka
[ '4', '5' ] '5 + 5;\n5;\n() => {\n  fn([\'5\', \'6\']);\n  fn([\'5\', \'6\']);\n};\n'
eureka
[ '4', '5' ] '5 + 5;\n5;\n() => {\n  fn([\'5\', \'6\']);\n  fn([\'5\', \'6\']);\n};\n'
eureka
[ '4', '5' ] '5 + 5;\n5;\n() => {\n  fn([\'5\', \'6\']);\n  fn([\'5\', \'6\']);\n};\n'
eureka
[ '4', '5' ] '5 + 5;\n5;\n() => {\n  fn([\'5\', \'6\']);\n  fn([\'5\', \'6\']);\n};\n'
eureka
[ '4', '5' ] '5 + 5;\n5;\n() => {\n  fn([\'5\', \'6\']);\n  fn([\'5\', \'6\']);\n};\n'
eureka
[ '4', '5' ] '5 + 5;\n5;\n() => {\n  fn([\'5\', \'6\']);\n  fn([\'5\', \'6\']);\n};\n'
eureka
[ '4', '5' ] '5 + 5;\n5;\n() => {\n  fn([\'5\', \'6\']);\n  fn([\'5\', \'6\']);\n};\n'
eureka
[ '4', '5' ] '5 + 5;\n5;\n() => {\n  fn([\'5\', \'6\']);\n  fn([\'5\', \'6\']);\n};\n'
eureka
[ '4', '5' ] '5 + 5;\n5;\n() => {\n  fn([\'5\', \'6\']);\n  fn([\'5\', \'6\']);\n};\n'
eureka
[ '4', '5' ] '5 + 5;\n5;\n() => {\n  fn([\'5\', \'6\']);\n  fn([\'5\', \'6\']);\n};\n'
eureka
[ '4', '5' ] '5 + 5;\n5;\n() => {\n  fn([\'5\', \'6\']);\n  fn([\'5\', \'6\']);\n};\n'
eureka
[ '4', '5' ] '5 + 5;\n5;\n() => {\n  fn([\'5\', \'6\']);\n  fn([\'5\', \'6\']);\n};\n'
eureka
[ '4', '5' ] '5 + 5;\n5;\n() => {\n  fn([\'5\', \'6\']);\n  fn([\'5\', \'6\']);\n};\n'
eureka
arguments to extract [ Position { start: 4, end: 5 } ] 5 + 5;
5;
() => {
  fn(['5', '6']);
  fn(['5', '6']);
};

arguments to extract [ Position { start: 4, end: 5 } ] 5 + 5;
5;
() => {
  fn(['5', '6']);
  fn(['5', '6']);
};

arguments to extract [ Position { start: 4, end: 5 } ] 5 + 5;
5;
() => {
  fn(['5', '6']);
  fn(['5', '6']);
};

arguments to extract [ Position { start: 4, end: 5 } ] 5 + 5;
5;
() => {
  fn(['5', '6']);
  fn(['5', '6']);
};

arguments to extract [ Position { start: 4, end: 5 } ] 5 + 5;
5;
() => {
  fn(['5', '6']);
  fn(['5', '6']);
};

arguments to extract [ Position { start: 0, end: 1 }, Position { start: 4, end: 5 } ] 5 + 5;
5;
() => {
  fn(['5', '6']);
  fn(['5', '6']);
};

arguments to extract [ Position { start: 0, end: 1 }, Position { start: 4, end: 5 } ] 5 + 5;
5;
() => {
  fn(['5', '6']);
  fn(['5', '6']);
};

