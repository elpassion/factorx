exports[`expressionsAt not during selection at end of an expression returns all expressions containing the position 1`] = `
Array [
  Node {
    "end": 5,
    "left": Node {
      "end": 1,
      "extra": Object {
        "raw": "5",
        "rawValue": 5,
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 1,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "start": 0,
      "type": "NumericLiteral",
      "value": 5,
    },
    "loc": SourceLocation {
      "end": Position {
        "column": 5,
        "line": 1,
      },
      "start": Position {
        "column": 0,
        "line": 1,
      },
    },
    "operator": "+",
    "right": Node {
      "end": 5,
      "extra": Object {
        "raw": "2",
        "rawValue": 2,
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 5,
          "line": 1,
        },
        "start": Position {
          "column": 4,
          "line": 1,
        },
      },
      "start": 4,
      "type": "NumericLiteral",
      "value": 2,
    },
    "start": 0,
    "type": "BinaryExpression",
  },
  Node {
    "end": 1,
    "extra": Object {
      "raw": "5",
      "rawValue": 5,
    },
    "loc": SourceLocation {
      "end": Position {
        "column": 1,
        "line": 1,
      },
      "start": Position {
        "column": 0,
        "line": 1,
      },
    },
    "start": 0,
    "type": "NumericLiteral",
    "value": 5,
  },
]
`;

exports[`expressionsAt not during selection at end of an expression returns all expressions containing the position 2`] = `
Array [
  Node {
    "end": 5,
    "left": Node {
      "end": 1,
      "extra": Object {
        "raw": "5",
        "rawValue": 5,
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 1,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "start": 0,
      "type": "NumericLiteral",
      "value": 5,
    },
    "loc": SourceLocation {
      "end": Position {
        "column": 5,
        "line": 1,
      },
      "start": Position {
        "column": 0,
        "line": 1,
      },
    },
    "operator": "+",
    "right": Node {
      "end": 5,
      "extra": Object {
        "raw": "2",
        "rawValue": 2,
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 5,
          "line": 1,
        },
        "start": Position {
          "column": 4,
          "line": 1,
        },
      },
      "start": 4,
      "type": "NumericLiteral",
      "value": 2,
    },
    "start": 0,
    "type": "BinaryExpression",
  },
]
`;

exports[`expressionsAt not during selection at end of an expression returns all expressions containing the position 3`] = `
Array [
  Node {
    "end": 5,
    "left": Node {
      "end": 1,
      "extra": Object {
        "raw": "5",
        "rawValue": 5,
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 1,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "start": 0,
      "type": "NumericLiteral",
      "value": 5,
    },
    "loc": SourceLocation {
      "end": Position {
        "column": 5,
        "line": 1,
      },
      "start": Position {
        "column": 0,
        "line": 1,
      },
    },
    "operator": "+",
    "right": Node {
      "end": 5,
      "extra": Object {
        "raw": "2",
        "rawValue": 2,
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 5,
          "line": 1,
        },
        "start": Position {
          "column": 4,
          "line": 1,
        },
      },
      "start": 4,
      "type": "NumericLiteral",
      "value": 2,
    },
    "start": 0,
    "type": "BinaryExpression",
  },
  Node {
    "end": 5,
    "extra": Object {
      "raw": "2",
      "rawValue": 2,
    },
    "loc": SourceLocation {
      "end": Position {
        "column": 5,
        "line": 1,
      },
      "start": Position {
        "column": 4,
        "line": 1,
      },
    },
    "start": 4,
    "type": "NumericLiteral",
    "value": 2,
  },
]
`;

exports[`expressionsAt not during selection at start of an expression returns all expressions containing the position 1`] = `
Array [
  Node {
    "end": 5,
    "left": Node {
      "end": 1,
      "extra": Object {
        "raw": "5",
        "rawValue": 5,
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 1,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "start": 0,
      "type": "NumericLiteral",
      "value": 5,
    },
    "loc": SourceLocation {
      "end": Position {
        "column": 5,
        "line": 1,
      },
      "start": Position {
        "column": 0,
        "line": 1,
      },
    },
    "operator": "+",
    "right": Node {
      "end": 5,
      "extra": Object {
        "raw": "2",
        "rawValue": 2,
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 5,
          "line": 1,
        },
        "start": Position {
          "column": 4,
          "line": 1,
        },
      },
      "start": 4,
      "type": "NumericLiteral",
      "value": 2,
    },
    "start": 0,
    "type": "BinaryExpression",
  },
  Node {
    "end": 1,
    "extra": Object {
      "raw": "5",
      "rawValue": 5,
    },
    "loc": SourceLocation {
      "end": Position {
        "column": 1,
        "line": 1,
      },
      "start": Position {
        "column": 0,
        "line": 1,
      },
    },
    "start": 0,
    "type": "NumericLiteral",
    "value": 5,
  },
]
`;

exports[`expressionsAt not during selection at start of an expression returns all expressions containing the position 2`] = `
Array [
  Node {
    "end": 5,
    "left": Node {
      "end": 1,
      "extra": Object {
        "raw": "5",
        "rawValue": 5,
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 1,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "start": 0,
      "type": "NumericLiteral",
      "value": 5,
    },
    "loc": SourceLocation {
      "end": Position {
        "column": 5,
        "line": 1,
      },
      "start": Position {
        "column": 0,
        "line": 1,
      },
    },
    "operator": "+",
    "right": Node {
      "end": 5,
      "extra": Object {
        "raw": "2",
        "rawValue": 2,
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 5,
          "line": 1,
        },
        "start": Position {
          "column": 4,
          "line": 1,
        },
      },
      "start": 4,
      "type": "NumericLiteral",
      "value": 2,
    },
    "start": 0,
    "type": "BinaryExpression",
  },
]
`;

exports[`expressionsAt not during selection at start of an expression returns all expressions containing the position 3`] = `
Array [
  Node {
    "end": 5,
    "left": Node {
      "end": 1,
      "extra": Object {
        "raw": "5",
        "rawValue": 5,
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 1,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "start": 0,
      "type": "NumericLiteral",
      "value": 5,
    },
    "loc": SourceLocation {
      "end": Position {
        "column": 5,
        "line": 1,
      },
      "start": Position {
        "column": 0,
        "line": 1,
      },
    },
    "operator": "+",
    "right": Node {
      "end": 5,
      "extra": Object {
        "raw": "2",
        "rawValue": 2,
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 5,
          "line": 1,
        },
        "start": Position {
          "column": 4,
          "line": 1,
        },
      },
      "start": 4,
      "type": "NumericLiteral",
      "value": 2,
    },
    "start": 0,
    "type": "BinaryExpression",
  },
  Node {
    "end": 5,
    "extra": Object {
      "raw": "2",
      "rawValue": 2,
    },
    "loc": SourceLocation {
      "end": Position {
        "column": 5,
        "line": 1,
      },
      "start": Position {
        "column": 4,
        "line": 1,
      },
    },
    "start": 4,
    "type": "NumericLiteral",
    "value": 2,
  },
]
`;
