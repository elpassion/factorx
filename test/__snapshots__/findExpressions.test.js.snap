// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`findExpressions when not exact at end of an expression returns all expressions containing the position 1`] = `
Array [
  Expression {
    "position": Position {
      "end": 5,
      "start": 0,
    },
    "value": "5 + 2",
  },
  Expression {
    "position": Position {
      "end": 1,
      "start": 0,
    },
    "value": "5",
  },
]
`;

exports[`findExpressions when not exact at end of an expression returns all expressions containing the position 2`] = `
Array [
  Expression {
    "position": Position {
      "end": 5,
      "start": 0,
    },
    "value": "5 + 2",
  },
]
`;

exports[`findExpressions when not exact at end of an expression returns all expressions containing the position 3`] = `
Array [
  Expression {
    "position": Position {
      "end": 5,
      "start": 0,
    },
    "value": "5 + 2",
  },
  Expression {
    "position": Position {
      "end": 5,
      "start": 4,
    },
    "value": "2",
  },
]
`;

exports[`findExpressions when not exact at start of an expression returns all expressions containing the position 1`] = `
Array [
  Expression {
    "position": Position {
      "end": 5,
      "start": 0,
    },
    "value": "5 + 2",
  },
  Expression {
    "position": Position {
      "end": 1,
      "start": 0,
    },
    "value": "5",
  },
]
`;

exports[`findExpressions when not exact at start of an expression returns all expressions containing the position 2`] = `
Array [
  Expression {
    "position": Position {
      "end": 5,
      "start": 0,
    },
    "value": "5 + 2",
  },
]
`;

exports[`findExpressions when not exact at start of an expression returns all expressions containing the position 3`] = `
Array [
  Expression {
    "position": Position {
      "end": 5,
      "start": 0,
    },
    "value": "5 + 2",
  },
  Expression {
    "position": Position {
      "end": 5,
      "start": 4,
    },
    "value": "2",
  },
]
`;
