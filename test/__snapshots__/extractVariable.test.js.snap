// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`extractVariable with const as a type param returns correct code 1`] = `
Object {
  "code": "const _ref = 5;
_ref + 2",
  "cursorPositions": Array [
    Position {
      "end": 10,
      "start": 6,
    },
    Position {
      "end": 20,
      "start": 16,
    },
  ],
}
`;

exports[`extractVariable with const as a type param returns correct code 2`] = `
Object {
  "code": "const _ref = 2;
5 + _ref",
  "cursorPositions": Array [
    Position {
      "end": 10,
      "start": 6,
    },
    Position {
      "end": 24,
      "start": 20,
    },
  ],
}
`;

exports[`extractVariable with const as a type param returns correct code 3`] = `
Object {
  "code": "const _ref = 5 + 2;
_ref",
  "cursorPositions": Array [
    Position {
      "end": 10,
      "start": 6,
    },
    Position {
      "end": 24,
      "start": 20,
    },
  ],
}
`;

exports[`extractVariable with const as a type param returns correct code 4`] = `
Object {
  "code": "() => {
  const _ref = 5;
  _ref + 2
}",
  "cursorPositions": Array [
    Position {
      "end": 20,
      "start": 16,
    },
    Position {
      "end": 32,
      "start": 28,
    },
  ],
}
`;

exports[`extractVariable with const as a type param returns correct code 5`] = `
Object {
  "code": "let a = do {
  const _ref = 5;
  _ref + 2
}",
  "cursorPositions": Array [
    Position {
      "end": 25,
      "start": 21,
    },
    Position {
      "end": 37,
      "start": 33,
    },
  ],
}
`;

exports[`extractVariable with const as a type param returns correct code 6`] = `
Object {
  "code": "import a from \\"b\\";
const _ref = 5;
_ref;",
  "cursorPositions": Array [
    Position {
      "end": 29,
      "start": 25,
    },
    Position {
      "end": 39,
      "start": 35,
    },
  ],
}
`;

exports[`extractVariable with correct selection extracts only as high as it has to 1`] = `
Object {
  "code": "const a = 6;
let _ref = 9;
a + _ref;",
  "cursorPositions": Array [
    Position {
      "end": 21,
      "start": 17,
    },
    Position {
      "end": 35,
      "start": 31,
    },
  ],
}
`;

exports[`extractVariable with correct selection returns correct code 1`] = `
Object {
  "code": "let _ref = 5;
_ref + 2",
  "cursorPositions": Array [
    Position {
      "end": 8,
      "start": 4,
    },
    Position {
      "end": 18,
      "start": 14,
    },
  ],
}
`;

exports[`extractVariable with correct selection returns correct code 2`] = `
Object {
  "code": "let _ref = 2;
5 + _ref",
  "cursorPositions": Array [
    Position {
      "end": 8,
      "start": 4,
    },
    Position {
      "end": 22,
      "start": 18,
    },
  ],
}
`;

exports[`extractVariable with correct selection returns correct code 2 1`] = `
Object {
  "code": "let _ref = () => {
  5 + 2
};

_ref",
  "cursorPositions": Array [
    Position {
      "end": 8,
      "start": 4,
    },
    Position {
      "end": 35,
      "start": 31,
    },
  ],
}
`;

exports[`extractVariable with correct selection returns correct code 3`] = `
Object {
  "code": "let _ref = 5 + 2;
_ref",
  "cursorPositions": Array [
    Position {
      "end": 8,
      "start": 4,
    },
    Position {
      "end": 22,
      "start": 18,
    },
  ],
}
`;

exports[`extractVariable with correct selection returns correct code 4`] = `
Object {
  "code": "() => {
  let _ref = 5;
  _ref + 2
}",
  "cursorPositions": Array [
    Position {
      "end": 18,
      "start": 14,
    },
    Position {
      "end": 30,
      "start": 26,
    },
  ],
}
`;

exports[`extractVariable with correct selection returns correct code 5`] = `
Object {
  "code": "let a = do {
  let _ref = 5;
  _ref + 2
}",
  "cursorPositions": Array [
    Position {
      "end": 23,
      "start": 19,
    },
    Position {
      "end": 35,
      "start": 31,
    },
  ],
}
`;

exports[`extractVariable with correct selection returns correct code 6`] = `
Object {
  "code": "import a from \\"b\\";
let _ref = 5;
_ref;",
  "cursorPositions": Array [
    Position {
      "end": 27,
      "start": 23,
    },
    Position {
      "end": 37,
      "start": 33,
    },
  ],
}
`;

exports[`extractVariable with multiple selections with correct selection extracts only as high as it has to 2 1`] = `
Object {
  "code": "const a = 6;
let _ref = 5;
() => { _ref + _ref };
_ref",
  "cursorPositions": Array [
    Position {
      "end": 21,
      "start": 17,
    },
    Position {
      "end": 39,
      "start": 35,
    },
    Position {
      "end": 46,
      "start": 42,
    },
    Position {
      "end": 54,
      "start": 50,
    },
  ],
}
`;

exports[`extractVariable with multiple selections with correct selection extracts only as high as it has to 3 1`] = `
Object {
  "code": "const a = () => {
  let _ref = 5;
  _ref + _ref
};
5",
  "cursorPositions": Array [
    Position {
      "end": 28,
      "start": 24,
    },
    Position {
      "end": 40,
      "start": 36,
    },
    Position {
      "end": 47,
      "start": 43,
    },
  ],
}
`;

exports[`extractVariable with multiple selections with correct selection extracts only as high as it has to in nested scopes 1`] = `
Object {
  "code": "let _ref = 5;
() => { _ref + _ref };
_ref",
  "cursorPositions": Array [
    Position {
      "end": 8,
      "start": 4,
    },
    Position {
      "end": 26,
      "start": 22,
    },
    Position {
      "end": 33,
      "start": 29,
    },
    Position {
      "end": 41,
      "start": 37,
    },
  ],
}
`;

exports[`extractVariable with multiple selections with correct selection returns correct code 1`] = `
Object {
  "code": "let _ref = 5;
_ref + _ref",
  "cursorPositions": Array [
    Position {
      "end": 8,
      "start": 4,
    },
    Position {
      "end": 18,
      "start": 14,
    },
    Position {
      "end": 25,
      "start": 21,
    },
  ],
}
`;

exports[`extractVariable with multiple selections with correct selection returns correct code 2`] = `
Object {
  "code": "const _ref = 5;
_ref + _ref",
  "cursorPositions": Array [
    Position {
      "end": 10,
      "start": 6,
    },
    Position {
      "end": 20,
      "start": 16,
    },
    Position {
      "end": 27,
      "start": 23,
    },
  ],
}
`;
